---
- hosts: all
  become: yes
  tasks:
    - name: Set master flag
      set_fact: master=yes
      when: ansible_host == masterIp

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 1

    - name: Set hostname
      hostname:
        name: "{{ label }}"

      # patch /boot/firmware/cmdline.txt
    - name: Check kernel command line parameters (cgroup memory)
      shell: cat /boot/firmware/cmdline.txt | grep cgroup_memory=1 | wc -l
      args:
        warn: no
      register: lineExists

    - name: Fix kernel command line parameters (cgroup memory)
      lineinfile:
        path: /boot/firmware/cmdline.txt
        regexp: '^(.+)$'
        line: '\1 cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1'
        backrefs: yes
      when: lineExists.stdout == '0'
      ignore_errors: yes

      # patch /boot/cmdline.txt
    - name: Check kernel command line parameters (cgroup memory)
      shell: cat /boot/cmdline.txt | grep cgroup_memory=1 | wc -l
      args:
        warn: no
      register: lineExists2

    - name: Fix kernel command line parameters (cgroup memory)
      lineinfile:
        path: /boot/cmdline.txt
        regexp: '^(.+)$'
        line: '\1 cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1'
        backrefs: yes
      when: lineExists2.stdout == '0'
      ignore_errors: yes

    - name: Check if Docker is installed
      command: which docker
      register: whichDocker
      ignore_errors: yes

    - name: Get Docker install script
      command:
        cmd: curl -fsSL get.docker.com -o get-docker.sh
      when: whichDocker.failed == true

    - name: Install Docker
      command:
        cmd: sh get-docker.sh
      when: whichDocker.failed == true

    - name: Start Docker service
      systemd:
        name: docker
        state: started

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

      # Unsinn - rebootet IMMER
#    - name: Reboot
#      reboot:
#      when: lineExists.stdout == '0' or  lineExists2.stdout == '0'

    # Ãœberlebt keinen Reboot
    - name: Disable swap
      command: swapoff -a

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl

#    - name: Configure node ip
#      lineinfile:
#        path: /etc/default/kubelet
#        line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}
#        create: yes

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: Reset Kubernetes cluster
      command: kubeadm reset -f

    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --pod-network-cidr=192.168.0.0/16
      when: master is defined

  #    - name: Install calico pod network
  #      become: false
  #      command: kubectl create -f https://docs.projectcalico.org/v3.4/getting-started/kubernetes/installation/hosted/calico.yaml

    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command
      when: master is defined

    - name: Copy join command to local file
      become: no
      local_action:
        module: copy
        content: "{{ join_command.stdout_lines[0] }}"
        dest: /tmp/join-command
      when: master is defined

    - name: Copy the join command to server location
      copy: src=/tmp/join-command dest=/tmp/join-command.sh mode=0777
      when: master is not defined

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh
      when: master is not defined
