---
- hosts: all
  gather_facts: false
  vars:
    bootPartition: 5203-DB74
    rootfsPartition: 2ab3f8e1-7dc6-43f5-b0db-dd5759d51d4e
    ssid: K8s
    psk: Kubern3tes
    ipHostnameOffset: 100
    inventoryFile: ../inventory/k8s-cluster.yaml
  tasks:

    # Mount partitions

    - name: Mount boot partition
      mount:
        src: UUID={{ bootPartition }}
        path: /mnt/{{ bootPartition }}
        fstype: vfat
        state: mounted
      delegate_to: localhost
      run_once: yes

    - name: Mount rootfs partitions
      mount:
        src: UUID={{ rootfsPartition }}
        path: /mnt/{{ rootfsPartition }}
        fstype: ext4
        state: mounted
      delegate_to: localhost
      run_once: yes

    # Determine new IP and hostname

#     this could be used in the future to make the playbook idempotent
#    - set_fact:
#        newHostname: "{{ lookup('file', '/mnt/' + rootfsPartition + '/etc/hostname') }}"
#      delegate_to: localhost
#      run_once: yes

    - set_fact:
        newIp: "{{ (groups['nodes'] | map('extract', hostvars, ['ansible_host']) | list | sort | last).split('.') | last | int +1 }}"
      delegate_to: localhost
      run_once: yes

    - set_fact:
        newHostname: raspi{{ newIp|int - ipHostnameOffset }}
      delegate_to: localhost
      run_once: yes

    # Enable SSH server

    - name: Enable SSH server
      file:
        path: /mnt/{{ bootPartition }}/ssh
        state: touch
      delegate_to: localhost
      run_once: yes

    # Configure network

    - name: Configure wifi
      lineinfile:
        path: /mnt/{{ rootfsPartition }}/etc/wpa_supplicant/wpa_supplicant.conf
        state: present
        line: "{{ item }}"
      with_items:
        - "network={"
        - "  ssid=\"{{ ssid }}\""
        - "  psk=\"{{ psk }}\""
        - "}"
      delegate_to: localhost
      run_once: yes

    - name: Configure hostname
      lineinfile:
        path: /mnt/{{ rootfsPartition }}/etc/hostname
        state: present
        line: "{{ newHostname }}"
        regexp: .*
      delegate_to: localhost
      run_once: yes

    - name: Configure static IP address
      lineinfile:
        path: /mnt/{{ rootfsPartition }}/etc/dhcpcd.conf
        state: present
        line: "{{ item }}"
      with_items:
        - interface wlan0
        - static ip_address={{ ipSubnet }}{{ newIp }}/24
        - static routers={{ ipSubnet }}1
        - static domain_name_servers={{ ipSubnet }}1
      delegate_to: localhost
      run_once: yes

    # Patch /boot/cmdline.txt (memory cgroup)

    - name: Check kernel command line parameters (cgroup memory)
      delegate_to: localhost
      run_once: yes
      lineinfile:
        line: egal
        regexp: .*cgroup_memory=1.*
        backrefs: yes
        dest: /mnt/{{ bootPartition }}/cmdline.txt
        state: present
      check_mode: yes
      register: findCgroup # if line is found, changed will be true => changed==false means we must add to the file

    - name: Fix kernel command line parameters (cgroup memory)
      delegate_to: localhost
      run_once: yes
      lineinfile:
        path: /mnt/{{ bootPartition }}/cmdline.txt
        regexp: '^(.+)$'
        line: '\1 cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1'
        backrefs: yes
      when: findCgroup.changed == false

    - name: Update ansible inventory
      delegate_to: localhost
      run_once: yes
      lineinfile:
        path: "{{ inventoryFile }}"
        state: present
        line: "{{ item }}"
      with_items:
        - "    {{ newHostname }}:"
        - "      ansible_host: \"{{'{{'}} ipSubnet }}{{ newIp }}\""

    # Add public ssh key



    # Unmount partitions

    - name: Unmount partitions
      mount:
        path: /mnt/{{ item }}
        state: absent
      with_items:
        - "{{ rootfsPartition }}"
        - "{{ bootPartition }}"
      delegate_to: localhost
      run_once: yes
